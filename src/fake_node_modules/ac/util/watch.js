const EventEmitter = require('events');
const { watch } = require('fs');

class Watcher extends EventEmitter {
  constructor (filename, cb) {
    super();

    this.watcher = watch(filename, this.listener.bind(this));
    this.emptyInterval = setInterval(() => this.empty(cb), 500);
    this._queue = [];
  }

  empty (cb) {
    const items = this._queue.filter((item, index) => this._queue.indexOf(item) === index);

    if (items[0]) {
      for (const item of items) {
        cb(item);
      }

      this._queue = [];
    }
  }

  listener (eventType, filename) {
    console.log(eventType, filename);
    if (eventType === 'change' && filename) {
      this._queue.push(filename);
    }
  }
}

module.exports = (filename, cb) => new Watcher(filename, cb);
