const { React, contextMenu } = require('powercord/webpack');
const { getOwnerInstance, waitFor } = require('powercord/util');

let appOwnerInstance;
waitFor('.pc-app > .pc-app')
  .then(app => (
    appOwnerInstance = getOwnerInstance(app)
  ));

module.exports = class ButtonItem extends React.PureComponent {
  onClick () {
    if (this.props.disabled) {
      appOwnerInstance.shake(600, 5);
    } else {
      contextMenu.closeContextMenu();
      this.props.onClick();
    }
  }

  render () {
    const button = (
      <div
        className={
          `pc-item item-1Yvehc ${this.props.image ? 'pc-itemImage itemImage-htIz_v' : ''}
          ${this.props.disabled ? 'disabled' : ''}`
        }
        role='button'
        onClick={this.onClick.bind(this)}
      >
        <span style={{ color: this.props.highlight }}>
          {this.props.name}
        </span>
        {this.props.image
          ? this.getButtonImage()
          : <div className='pc-hint hint-22uc-R'>
            {this.props.hint}
          </div>}
      </div>
    );

    if (this.props.seperate) {
      return (
        <div className='pc-itemGroup itemGroup-1tL0uz seperated'>
          {button}
        </div>
      );
    }

    return button;
  }

  getButtonImage () {
    return (
      this.props.image.startsWith('fa-')
        ? <div style={{ cursor: 'pointer!important' }}
          class={`${this.props.image.endsWith('-alt')
            ? 'far'
            : 'fas'}
            ${this.props.image.replace('-alt', '')} fa-fw`} />
        : <img alt src={this.props.image} />
    );
  }
};
