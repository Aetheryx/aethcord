const { ipcRenderer } = require('electron');
/**
 * An utility class that provides global shortcuts over RPC
 */
module.exports = new class GlobalShortcuts {
  constructor () {
    this._keybinds = {};
    ipcRenderer.on('pc-globalShortcutInvoke', (_, accel) => {
      if (Object.prototype.hasOwnProperty.call(this._keybinds, accel)) {
        this._keybinds[accel]();
      }
    });
  }

  register (accelerator, callback) {
    if (!Object.prototype.hasOwnProperty.call(this._keybinds, accelerator)) {
      this._keybinds[accelerator] = callback;
      return ipcRenderer.sendSync('pc-registerGlobalShortcut', accelerator);
    }
    return false;
  }

  registerAll (accelerators, callback) {
    for (const accel of accelerators) {
      this.register(accel, callback);
    }
  }

  unregister (accelerator) {
    if (Object.prototype.hasOwnProperty.call(this._keybinds, accelerator)) {
      delete this._keybinds[accelerator];
      ipcRenderer.invoke('pc-unregisterGlobalShortcut', accelerator);
    }
  }

  unregisterAll () {
    this._keybinds = {};
    ipcRenderer.invoke('pc-unregisterAllGlobalShortcuts');
  }
}();
